public class Vector2D {
	double x;
	double y;

	Vector2D(double x, double y) {
		this.x = x;
		this.y = y;
	}

	public double getX() {
		return this.x;
	}

	public double getY() {
		return this.y;
	}

	public void setX(double x) {
		this.x = x;
	}

	public void setY(double y) {
		this.y = y;
	}

	public Vector2D add(Vector2D other) {
		return new Vector2D(this.x + other.x, this.y + other.y);
	}

	public Vector2D negate() {
		return new Vector2D(this.x * -1, this.y * -1);
	}

	public double dotProduct(Vector2D other) {
		return ((this.x * other.x) + (this.y * other.y));
	}

	public double getRadiansTo(Vector2D other) {
		double dotProduct = this.dotProduct(other);
		double lengthThis = this.length();
		double lengthOther = other.length();
		return dotProduct / (lengthThis * lengthOther);
	}

	public Vector2D rotate(double p_angle) {
		return new Vector2D(this.x * Math.cos(p_angle) - this.y * Math.sin(p_angle), // now x is something different
																						// than original vector x
				this.x * Math.sin(p_angle) + this.y * Math.cos(p_angle));
	}

	public Vector2D multiply(double p_scalar) {
		return new Vector2D(this.x * p_scalar, this.y * p_scalar);
	}

	public double length() {

		return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
	}

	public Vector2D normalize() {
		double length = this.length();
		return new Vector2D(this.x / length, this.y / length);
	}
}
